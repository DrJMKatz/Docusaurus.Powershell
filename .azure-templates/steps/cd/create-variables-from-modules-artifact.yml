# -----------------------------------------------------------------------------
# This cd-step generates environment variables by analyzing the module artifact.
#
# Being lazy for now, single module only
# -----------------------------------------------------------------------------
parameters:
  artifactName: ''
  artifactDownloadDirectory: $(Build.ArtifactStagingDirectory)

steps:
- powershell: |
    Write-Host "Template parameters:"
    Write-Host "=> artifactName              = ${{ parameters.artifactName }}"
    Write-Host "=> artifactDownloadDirectory = ${{ parameters.artifactDownloadDirectory }}"

    $artifactModuleName = Get-ChildItem -Path "${{ parameters.artifactDownloadDirectory }}" -Directory
    $artifactModuleVersion = Get-ChildItem -Path (Join-Path -Path "${{ parameters.artifactDownloadDirectory }}" -ChildPath $artifactModuleName) -Directory
    $artifactModuleFolder = [IO.Path]::Combine("${{ parameters.artifactDownloadDirectory }}", $artifactModuleName, $artifactModuleVersion)
    $artifactManifestPath = Get-Item (Join-Path -Path $artifactModuleFolder -ChildPath "*.psd1")

    Write-Host "Exporting variables:"
    Write-Host ("EXPORT {0} = {1}`n##vso[task.setvariable variable={0}]{1}" -f "ARTIFACT_MODULE_NAME", $artifactModuleName)
    Write-Host ("EXPORT {0} = {1}`n##vso[task.setvariable variable={0}]{1}" -f "ARTIFACT_MODULE_VERSION", $artifactModuleVersion)
    Write-Host ("EXPORT {0} = {1}`n##vso[task.setvariable variable={0}]{1}" -f "ARTIFACT_MODULE_FOLDER", $artifactModuleFolder)
    Write-Host ("EXPORT {0} = {1}`n##vso[task.setvariable variable={0}]{1}" -f "ARTIFACT_MANIFEST_NAME", $artifactManifestPath.Name)
    Write-Host ("EXPORT {0} = {1}`n##vso[task.setvariable variable={0}]{1}" -f "ARTIFACT_MANIFEST_PATH", $artifactManifestPath)
  displayName: 'Create Variables From Module Artifact'
  condition: and(succeeded(), ne(variables['SKIP_RELEASE'], 'True'))
